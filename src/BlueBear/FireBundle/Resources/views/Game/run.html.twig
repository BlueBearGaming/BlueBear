{% extends '@BlueBearBackoffice/layout.html.twig' %}

{% block content %}
    <style>
        table td {
            height: 50px;
            width: 50px;
            padding: 20px;
            cursor: pointer;
        }
        .fireman {
            background: red;            
        }
        .fire {
            background: orange;
        }
    </style>

    <style>
        html, body {
            overflow: hidden;
            width: 100%;
            height: 100%;
            margin: 0;
            padding: 0;
        }

        #renderCanvas {
            width: 100%;
            height: 100%;
            touch-action: none;
        }
    </style>

   {# <table>
        {% for row in map.cells %}
            <tr>
            {% for cell in row %}

                {% if map.fireman.x == cell.x and map.fireman.y == cell.y %}
                    <td class="fireman" data-x="{{ cell.x }}" data-y="{{ cell.y }}">
                        FIREMAN
                    </td>
                {% elseif map.getFire(cell.x, cell.y) %}
                    <td class="fire" data-x="{{ cell.x }}" data-y="{{ cell.y }}">
                        FIRE
                    </td>
                {% else %}
                    <td class="land" data-x="{{ cell.x }}" data-y="{{ cell.y }}">
                        EMPTY
                    </td>
                {% endif %}
            {% endfor %}
            </tr>
        {% endfor %}
    </table>#}

    <canvas id="renderCanvas"></canvas>

    <script>
        $(document).on('ready', function () {

        });





    </script>

    {{ client.renderChat | raw }}
{% endblock %}

{% block javascripts %}
    <script src="{{ asset('js/babylon.js') }}"></script>

<script>

    // Get the canvas element from our HTML above
    var canvas = document.getElementById("renderCanvas");

    // Load the BABYLON 3D engine
    var engine = new BABYLON.Engine(canvas, true);

    // This begins the creation of a function that we will 'call' just after it's built
    var createScene = function () {

        // Now create a basic Babylon Scene object
        var scene = new BABYLON.Scene(engine);

        // Change the scene background color to green.
        scene.clearColor = new BABYLON.Color3(20, 20, 20);

        // This creates and positions a free camera
        //var camera = new BABYLON.FreeCamera("camera1", new BABYLON.Vector3(0, 5, -100), scene);
        var camera = new BABYLON.ArcRotateCamera("ArcRotateCamera", 1, 0.8, 10, new BABYLON.Vector3(0, 0, 0), scene);

        // This targets the camera to scene origin
        camera.setTarget(BABYLON.Vector3.Zero());

        // This attaches the camera to the canvas
        camera.attachControl(canvas, false);

        // This creates a light, aiming 0,1,0 - to the sky.
        var light = new BABYLON.HemisphericLight("light1", new BABYLON.Vector3(0, 1, 0), scene);

        // Dim the light a small amount
        light.intensity = .5;

        // Enable Collisions
        scene.collisionsEnabled = true;
        camera.checkCollisions = true;

        // Let's try our built-in 'sphere' shape. Params: name, subdivisions, size, scene
        //var sphere = BABYLON.Mesh.CreateSphere("sphere1", 16, 2, scene);

        // Move the sphere upward 1/2 its height
        //sphere.position.y = 1;

        var materialSphere1 = new BABYLON.StandardMaterial("grass", scene);
        materialSphere1.diffuseTexture = new BABYLON.Texture("http://dev.bluebear.fr/img/grass.jpg", scene);

        // Let's try our built-in 'ground' shape.  Params: name, width, depth, subdivisions, scene
        //var ground = BABYLON.Mesh.CreateGround("ground1", 600, 600, 2, scene);

        var ground = BABYLON.Mesh.CreateGroundFromHeightMap("ground", "http://dev.bluebear.fr/img/heatmap.png", 600, 600, 250, -5, 15, scene, false);
        ground.material = materialSphere1;

        ground.checkCollisions = true;

        // Skybox
        var skybox = BABYLON.Mesh.CreateBox("skyBox", 1000.0, scene);
        var skyboxMaterial = new BABYLON.StandardMaterial("skyBox", scene);
        skyboxMaterial.backFaceCulling = false;
        skyboxMaterial.reflectionTexture = new BABYLON.CubeTexture("http://dev.bluebear.fr/img/skybox/skybox", scene);
        skyboxMaterial.reflectionTexture.coordinatesMode = BABYLON.Texture.SKYBOX_MODE;
        skyboxMaterial.diffuseColor = new BABYLON.Color3(0, 0, 0);
        skyboxMaterial.specularColor = new BABYLON.Color3(0, 0, 0);
        skybox.material = skyboxMaterial;

        // Creation of a torus
        // (name, diameter, thickness, tessellation, scene, updatable)
        //var torus = BABYLON.Mesh.CreateTorus("torus", 20, 1, 10, scene, false);
        //torus.position = new BABYLON.Vector3(-5, -5, -5);

        // Creation of a knot
        // (name, radius, tube, radialSegments, tubularSegments, p, q, scene, updatable)
        //var knot = BABYLON.Mesh.CreateTorusKnot("knot", 2, 0.5, 128, 64, 2, 3, scene);

        // Leave this function
        return scene;

    };  // End of createScene function

    // Now, call the createScene function that you just finished creating
    var scene = createScene();
    // Register a render loop to repeatedly render the scene
    engine.runRenderLoop(function () {
        scene.render();
    });
    // Watch for browser/canvas resize events
    window.addEventListener("resize", function () {
        engine.resize();
    });



</script>



    {#{{ client.render | raw }}#}
{% endblock %}
